<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns='http://www.springframework.org/schema/beans'
	xmlns:mvc='http://www.springframework.org/schema/mvc' 
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xmlns:p='http://www.springframework.org/schema/p'
	xmlns:context='http://www.springframework.org/schema/context' 
	xmlns:cache='http://www.springframework.org/schema/cache'
	xmlns:tx='http://www.springframework.org/schema/tx'
	xmlns:aop='http://www.springframework.org/schema/aop'
	xmlns:rabbit='http://www.springframework.org/schema/rabbit'	
	xsi:schemaLocation='
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		'>

	<!-- ********************************************************************** -->
	
	<!--注册数据库的连接信息 -->
	<import resource='spring-db-mysql.xml' />	
	<!-- <import resource='classpath:spring-db-cassandra.xml' />	 -->	
	
	<!-- 配置mybatis的sqlsessionFactory -->
	<!-- mybatis-spring -->
	<bean id='sqlSessionFactory' class='org.isotope.jfp.framework.support.MySqlSessionFactorySupport'>
		<property name='dataSource' ref='myDateSourceManager' />
		<property name='configLocation' value='classpath:config/db/mybatis.xml' />
		<property name='mapperLocations'>
			<list>
				<value>classpath*:/com/mcookies/qxy/common/**/*.xml</value>
		 	</list>
		</property>
	</bean>
	
	<!-- 批量SqlSession -->
	<bean id='mySqlSession' class='org.mybatis.spring.SqlSessionTemplate' scope='prototype'>
		<!-- 构造参数，自动关闭sqlSession -->
		<constructor-arg index='0' ref='sqlSessionFactory' />
		<!-- SIMPLE 执行器没有什么特别之处。
			 REUSE 执行器重用预处理语句。
			 BATCH 执行器重用语句和批量更新 -->
		<constructor-arg index='1' value='SIMPLE' />
	</bean>
	
	<!--管理数据源连接配置 -->
	<bean id='myDateSourceManager' class='org.isotope.jfp.framework.mybatis.MyDataSourceManager' >
		<property name='defaultTargetDataSource' ref ='mysqlDataSource' />
	
		<property name='targetDataSources'>
			<map>
				<entry key='MySql' value-ref='mysqlDataSource' />
			</map>
		</property>
	</bean>
	
	<!-- 配置数据库初始化 -->
	<!-- DB管理工具初始化方法creat建库/init初始化数据/build重构/test简单测试  init-method='test' -->
	<bean id='DBConfigBean' class='org.isotope.jfp.framework.db.DBConfigBean'>
		<property name='errorGoon' value='true' />
		<property name='configLocation' value='classpath:/config/db/mydb.xml' />
		<property name='sqlLocations'>
			<list>
				<value>classpath*:/com/mcookies/qxy/common/**/*.sql</value>
		 	</list>
		</property>
		<property name='dataLocations'>
			<list>
				<value>classpath*:/com/mcookies/qxy/common/**/*.dat</value>
		 	</list>		
		</property>
	</bean> 
	
	<!-- <bean class='org.isotope.jfp.framework.db.DBService' scope='singleton' init-method='creat' /> 
	<bean class='org.isotope.jfp.framework.db.DBDao' />
	<bean class='org.isotope.jfp.framework.db.DBController' /> -->
	
	<!-- 物理分页 -->
	<bean id='IDialectInterceptor' class='org.isotope.jfp.framework.mybatis.plugin.dialect.MySQLDialect' scope='prototype'>
		<property name='supportsOrderby' value=' ' />
	</bean>
</beans>
